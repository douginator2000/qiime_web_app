<%
login_list = []
%>

<style>
th {
	background-color: #bbb;	
}

.widetable {
	width: 100%;
}

.gridrow {
	margin: 5px;
	background-color: #eee;
}

.result_container {
	 background-color: #888; 
	 margin-bottom: 20px;
	 border-radius: 10px;
	 border-width: 5px;
	 border-style: solid;
	 border-color: #444;
}

.result_item {
	
}
</style>

Find stuff.
<div>
	<form action="fusebox.psp?page=ag_search.psp" name="agForm" id="agForm" method="post">
		<table>
			<tr>
				<td><input type="text" name="search_term" id="search_term"></td>
				<td><input type="button" onclick="validateAGSingleSubmitForm()" value="Go" style="width:50px;">
			</tr>
		</table>
	</form>
</div>

<%

if 'search_term' in form:
	search_term = str(form['search_term']).lower()
	# First look for participant info	
	sql = """
		select 	cast(ag_login_id as varchar2(100)) as ag_login_id
		from 	ag_login al
		where 	lower(email) like '%{0}%' or lower(name) like '%{0}%' or lower(address) like '%{0}%'""".format(search_term)
	results = ag_data_access.dynamicMetadataSelect(sql).fetchall()
	for item in results:
		login_list.append((item[0], 'login'))

	# Check matches in kits
	sql = """
		select  cast(ag_login_id as varchar2(100)) as ag_login_id
		from    ag_kit
		where   supplied_kit_id like '%{0}%' or kit_password like '%{0}%' or kit_verification_code = '%{0}%'""".format(search_term)
	results = ag_data_access.dynamicMetadataSelect(sql).fetchall()
	for item in results:
		login_list.append((item[0], 'kit'))

	# Check matches in barcodes
	sql = """
		select  cast(ak.ag_login_id as varchar2(100)) as ag_login_id
		from    ag_kit ak
		        inner join ag_kit_barcodes akb
		        on ak.ag_kit_id = akb.ag_kit_id
		where   barcode like '%{0}%' or participant_name like '%{0}%'""".format(search_term)
	results = ag_data_access.dynamicMetadataSelect(sql).fetchall()
	for item in results:
		login_list.append((item[0], 'barcode'))
	
	# Output the results
	if len(login_list) > 0:
		for ag_login_id, location_found in login_list:

			###########################################
			# Login-level information
			###########################################
			sql = """
				select  email, name, address, city, state, zip, country
				from    ag_login
				where   ag_login_id = '{0}'""".format(ag_login_id)
			results = ag_data_access.dynamicMetadataSelect(sql).fetchall()
			if len(results) > 0:
				req.write('<div class="result_container">')

				for email, name, address, city, state, zip, country in results:
					req.write('<table class="widetable">')
					req.write('<th></th>')
					req.write('<th>email</th>')
					req.write('<th>name</th>')
					req.write('<th>address</th>')
					req.write('<th>city</th>')
					req.write('<th>state</th>')
					req.write('<th>zip</th>')
					req.write('<th>country</th>')
					req.write('<tr class="gridrow">')
					edit_url = 'fusebox.psp?page=ag_edit_participant.psp&ag_login_id={0}'.format(ag_login_id)
					req.write('<td><a href="{0}">edit</a></td>'.format(edit_url))
					req.write('<td>{0}</a></td>'.format(email))
					req.write('<td>{0}</td>'.format(name))
					req.write('<td>{0}</td>'.format(address))
					req.write('<td>{0}</td>'.format(city))
					req.write('<td>{0}</td>'.format(state))
					req.write('<td>{0}</td>'.format(zip))
					req.write('<td>{0}</td>'.format(country))
					req.write('</tr>')
					req.write('</table>')

					###########################################
					# Kit-level information
					###########################################
					sql = """
						select  cast(ag_kit_id as varchar2(100)) as ag_kit_id,
						        cast(ag_login_id as varchar2(100)) as ag_login_id,
								supplied_kit_id, kit_password, swabs_per_kit, kit_verification_code, kit_verified 
						from    ag_kit
						where   ag_login_id = '{0}'""".format(ag_login_id)
					results = ag_data_access.dynamicMetadataSelect(sql).fetchall()
					if len(results) > 0:
						req.write('<table class="widetable">')
						for ag_kit_id, ag_login_id, supplied_kit_id, kit_password, swabs_per_kit, kit_verification_code, kit_verified in results:
							req.write('<th></th>')
							req.write('<th>supplied_kit_id</th>')
							req.write('<th>kit_password</th>')
							req.write('<th>swabs_per_kit</th>')
							req.write('<th>kit_verification_code</th>')
							req.write('<th>kit_verified</th>')
							req.write('<tr class="gridrow">')
							edit_url = 'fusebox.psp?page=ag_edit_kit.psp&ag_kit_id={0}'.format(ag_kit_id)
							req.write('<td><a href="{0}">edit</a></td>'.format(edit_url))
							req.write('<td>{0}</td>'.format(supplied_kit_id))
							req.write('<td>{0}</td>'.format(kit_password))
							req.write('<td>{0}</td>'.format(swabs_per_kit))
							req.write('<td>{0}</td>'.format(kit_verification_code))
							req.write('<td>{0}</td>'.format(kit_verified))
							req.write('</tr>')
						req.write('</table>')

						###########################################
						# Barcode-level information
						###########################################
						sql = """
							select  cast(ag_kit_barcode_id as varchar2(100)) as ag_kit_barcode_id,
							        cast(ag_kit_id as varchar2(100)) as ag_kit_id,
							        barcode, sample_date, sample_time, site_sampled, participant_name, environment_sampled, notes
							from    ag_kit_barcodes
							where   ag_kit_id = '{0}'""".format(ag_kit_id)
						results = ag_data_access.dynamicMetadataSelect(sql).fetchall()
						if len(results) > 0:
							req.write('<table class="widetable">')
							for ag_kit_barcode_id, ag_kit_id, barcode, sample_date, sample_time, site_sampled, participant_name, environment_sampled, notes in results:
								req.write('<th>barcode</th>')
								req.write('<th>sample_date</th>')
								req.write('<th>sample_time</th>')
								req.write('<th>site_sampled</th>')
								req.write('<th>participant_name</th>')
								req.write('<th>environment_sampled</th>')
								req.write('<tr class="gridrow">')
								req.write('<td>{0}</td>'.format(barcode))
								req.write('<td>{0}</td>'.format('' if (sample_date is None) else sample_date))
								req.write('<td>{0}</td>'.format('' if (sample_time is None) else sample_time))
								req.write('<td>{0}</td>'.format('' if (site_sampled is None) else site_sampled))
								req.write('<td>{0}</td>'.format('' if (participant_name is None) else participant_name))
								req.write('<td>{0}</td>'.format('' if (environment_sampled is None) else environment_sampled))
								req.write('</tr>')
								req.write('<tr>')
								req.write('<td>Notes: {0}</td>'.format('' if (notes is None) else notes))
								req.write('</tr>')
							req.write('</table>')
							

				# Close the div for this login
				req.write('</div>')
				

	else:
		req.write('No results found.')



